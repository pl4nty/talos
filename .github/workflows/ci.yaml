env:
  USERNAME: ${{ github.repository_owner }}
  PKGS_PREFIX: ghcr.io/pl4nty
  IMAGE_TAG: latest
  PKGS: latest

name: default
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
"on":
  push:
    branches:
      - main
      - release-*
    tags:
      - v*
  pull_request:
    branches:
      - main
      - release-*
jobs:
  default:
    permissions:
      actions: read
      contents: write
      issues: read
      packages: write
      pull-requests: read
      id-token: write
    runs-on:
      - ubuntu-latest
    if: (!startsWith(github.head_ref, 'renovate/') && !startsWith(github.head_ref, 'dependabot/'))
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Unshallow
        run: |
          git fetch --prune --unshallow
      - name: Set up Namespace CLI
        uses: namespacelabs/nscloud-setup@v0
      - name: Set up Docker Buildx
        uses: namespacelabs/nscloud-setup-buildx-action@v0
      - name: Build
        run: |
          make installer imager
      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - name: Push to registry
        if: github.event_name != 'pull_request'
        run: |
          make PUSH=true installer imager
      - name: Set up cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.3.0
      - name: Set up crane
        if: github.event_name != 'pull_request'
        run: |
          curl -sL "https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz" > go-containerregistry.tar.gz
          tar -zxvf go-containerregistry.tar.gz -C /usr/local/bin/ crane
      - name: Sign images
        if: github.event_name != 'pull_request'
        run: |
          make sign-images
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: crazy-max/ghaction-github-release@v2
        with:
          draft: "true"
      - name: Build riscv64 image
        if: github.event_name != 'pull_request'
        run: docker run --rm -t -v $PWD/_out:/out -v /dev:/dev --privileged ghcr.io/pl4nty/imager metal --arch riscv64
      - name: Upload image
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: _out
